---
import "../styles/global.css";
import "../styles/theme.css";
import '@fontsource-variable/roboto';
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";

---

<!doctype html>
<html lang="en" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Chung Nghia's Portfolio</title>
		<script is:inline>
			let isDarkTheme = localStorage.theme === "dark" || (!('theme' in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches);
			document.documentElement.classList.toggle("dark", isDarkTheme);
			document.documentElement.setAttribute(
				"data-color-scheme",
				isDarkTheme ? "dark" : "light"
			);
		</script>
	</head>
	<body class="font-display bg-(--page-bg)">
		<div id="particles-star" class="absolute -z-10 main-cover w-full bg-(--header-bg) pointer-events-none"></div>
		<div class="fixed top-0 left-0 right-0 bottom-0 pointer-events-none z-10 sm:w-[90%] sm:max-w-5xl mx-auto">
			<Navbar />
		</div>
		<div class="absolute top-0 w-full">
			<div class="w-full sm:w-[90%] sm:max-w-5xl mx-auto">
				<slot />
				<Footer />
			</div>
		</div>
	</body>
</html>
<script>
import PhotoSwipeLightbox from "photoswipe/lightbox";
import "photoswipe/style.css"
import { tsParticles } from "@tsparticles/engine";
import { loadStarsPreset } from "@tsparticles/preset-stars";

function setup() {
	const navbar = document.querySelector("#main-navbar");
	let lastScroll = 0;
	addEventListener("scroll", (e) => {
		if (navbar) {
			const scroll = document.documentElement.scrollTop;
			const isScrollDown = scroll - lastScroll > 0;
			lastScroll = scroll;

			if (isScrollDown) {
				navbar.classList.add("navbar-mini");
			} else {
				navbar.classList.remove("navbar-mini");
			}
		}
	})
}

function initPhotoSwipe() {
	const lightbox = new PhotoSwipeLightbox({
		gallery: ".project-photos",
		children: 'img',
		pswpModule: () => import("photoswipe"),
		wheelToZoom: true,
		padding: { top: 30, bottom: 30, left: 30, right: 30 },
		showHideAnimationType: 'fade',
		showAnimationDuration: 100,
		hideAnimationDuration: 100
	});
	lightbox.addFilter("domItemData", (itemData, element) => {
		if (element instanceof HTMLImageElement) {
			itemData.src = element.src

			itemData.w = Number(element.naturalWidth || window.innerWidth)
			itemData.h = Number(element.naturalHeight || window.innerHeight)

			itemData.msrc = element.src
		}

		return itemData
	});
	lightbox.init();
}

function initThemeToggle() {
	let isDarkTheme = localStorage.theme === "dark" || (!('theme' in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches);

	const themeToggle = document.getElementById("theme-toggle") as HTMLInputElement;
	if (themeToggle) {
		themeToggle.checked = isDarkTheme;
		themeToggle.addEventListener("change", (e) => toggleTheme());
		themeToggle.addEventListener("change", (e) => refreshParticle());
	}

	async function toggleTheme() {
		if (typeof localStorage !== "undefined" && typeof document !== "undefined") {
			isDarkTheme = !isDarkTheme;

			const theme = isDarkTheme ? 'dark' : 'light';
			localStorage.setItem('theme', theme);

			document.documentElement.classList.toggle('dark', isDarkTheme);
			document.documentElement.setAttribute(
				"data-color-scheme",
				isDarkTheme ? "dark" : "light"
			);
		}
	}

	async function refreshParticle() {
		initStarBackground();
	}
}

async function initStarBackground() {
	await loadStarsPreset(tsParticles);

	let style = window.getComputedStyle(document.body);
	let bgColor = style.getPropertyValue("--header-bg");
	let starColor = style.getPropertyValue("--header-star");

	await tsParticles.load({
		id: "particles-star",
		options: {
			background: {
				color: bgColor
			},
			fullScreen: {
				enable: false
			},
			fpsLimit: 20,
			particles: {
				number: {
					value: 150,
				},
				size: {
					value: 3,
				},
				color: {
					value: starColor
				},
				opacity: {
					value: {
						min: 0,
						max: 0.35
					},
					animation: {
						speed: 0.6,
						startValue: "min",
						sync: false
					},
				},
				move: {
					speed: 0.5
				}
			},
		preset: "stars",
		},
	});
}

setup();
initPhotoSwipe();
initThemeToggle();
initStarBackground();
</script>